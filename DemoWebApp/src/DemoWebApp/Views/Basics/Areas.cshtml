@{
    ViewData["Title"] = "Areas & Routing";
}

<div class="content bg-gray-lighter">
    <div class="row items-push">
        <div class="col-sm-8">
            <h1 class="page-heading" data-tmp="Areas">
                Areas and Routing
            </h1>
        </div>
    </div>
</div>

<div class="content content-boxed">
    <div class="block">
        <div class="block-header">
            <h3 class="block-title">Areas</h3>
        </div>
        <div class="block-content">
            <p>YOu can use all the knowledge from MVC4.</p>
        </div>
    </div>

    <div class="block">
        <div class="block-header">
            <h3 class="block-title">Routing</h3>
        </div>
        <div class="block-content">
            <p>Routing is a powerful feature that is built into the default ASP.NET MVC project template such that most apps will be able to leverage it without having to customize its behavior.</p>
            <p>Customizing routing behavior is an advanced development approach.</p>
        </div>
        <div class="block-content">
            <p>Keep in mind the following recommendations with regard to routing:</p>
            <ul>
                <li>Most apps shouldn’t need custom routes.</li>
                <li>Attribute routes should be used for all APIs.</li>
                <li>Attribute routes are recommended for when you need complete control over your app’s URLs.</li>
                <li>Conventional routing is recommended for when all of your controllers/actions fit a uniform URL convention.</li>
                <li>Routes can be tricky to test and debug.</li>
                <li>Routes should not be used as a means of securing your controllers or their action methods.</li>
                <li>Avoid building or changing route collections at runtime</li>
            </ul>
        </div>
    </div>
</div>
